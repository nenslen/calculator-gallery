@function hsb($h-hsb, $s-hsb, $b-hsb, $a: 1) {
	@if $b-hsb == 0 {
		@return hsla(0, 0, 0, $a);
	} @else {
		$l-hsl: ($b-hsb/2) * (2 - ($s-hsb/100));
		$s-hsl: ($b-hsb * $s-hsb) / if($l-hsl < 50, $l-hsl * 2, 200 - $l-hsl * 2);
		@return hsla($h-hsb, $s-hsl, $l-hsl, $a);
	}
} 

@function hsb-saturate($s, $a) {
	@if $s == 0 {
		@return 0;
	} @else {
		@return $s + $a;
	}
}

/**
 * @param $h: Hue
 * @param $s: Saturation
 * @param $b: Brightness
 * @param $blackText: If the text color should be black. False by default
 * @param $events: If the element should respond to mouse events (hover, etc). False by default
 * @param $input: If the element is an input element. False by default
 */
@mixin colorize($h, $s, $b, $blackText: 0, $events: 0, $input: 0) {
	$color: hsb($h, $s, $b);
	$color-dark: hsb($h, hsb-saturate($s, 10), $b);
	$inset-top: inset 0 1px 0 hsb($h, $s - 20, $b + 10);
	$inset-bottom: inset 0 -1px 0 hsb($h, hsb-saturate($s, 10), $b - 10);
	$inset: inset 0 0 0 1px hsb($h, hsb-saturate($s, - 10), $b);

	background-color: $color;
	background-image: linear-gradient(to bottom, $color, $color-dark);
	border: 1px solid hsb($h, hsb-saturate($s, 20), $b - 20);
	box-shadow: $inset-top,
	          $inset-bottom,
	          $inset,
	          0 2px 4px rgba(black, 0.2);


    @if $events == 1 {
		&:hover {
			color: rgba(255, 255, 255, 0.9);
			background-image: linear-gradient(to bottom, lighten($color, 5%), $color-dark);
		}
		&:active {
			color: rgba(255, 255, 255, 0.7);
			background: $color-dark;
			background-image: linear-gradient(to top, $color, $color-dark);
			box-shadow: inset 0 2px 3px rgba(black, 0.2);
		}
	}

	@if $input == 1 {
		color: rgba(255, 255, 255, 0.7);
		background: $color-dark;
		box-shadow: inset 0 2px 3px rgba(black, 0.2);
	}

	@if $blackText == 1 {
		color: darken(hsb($h, hsb-saturate($s, 40), $b - 40), 50%);
		text-shadow: 0 1px 0 rgba(white, 0.5);
		
		::placeholder {
		    color: #000;
		    opacity: 0.5;
		    text-shadow: none;
		}

		@if $events == 1 {
			&:hover {
				color: hsb($h, hsb-saturate($s, 40), $b - 30);
			}

			&:active {
				color: hsb($h, hsb-saturate($s, 40), $b - 20);
				background: $color-dark;
				background-image: linear-gradient(to top, $color, $color-dark);
				box-shadow: inset 0 2px 3px rgba(black, 0.2);
			}
		}
	} @else {
		color: #eee;
		text-shadow: 0 1px 2px rgba(black, 0.5); 
	}

	.fa {
		color: hsb($h, hsb-saturate($s, 20), $b - 20);
		text-shadow: 0 1px 0 rgba(white, 0.3);
	}
}
